{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/odile/anime-manga-app/lib/useUser.ts"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabaseClient'\n\nexport function useUser() {\n  const [user, setUser] = useState<any>(null);\n\n  useEffect(() => {\n    const getSession = async () => {\n      const {\n        data: { session },\n      } = await supabase.auth.getSession();\n\n      setUser(session?.user ?? null);\n    };\n\n    getSession();\n\n    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser(session?.user ?? null);\n    });\n\n    return () => {\n      listener.subscription.unsubscribe();\n    };\n  }, []);\n\n  return user;\n}"],"names":[],"mappings":";;;AAEA;AACA;;AAHA;;;AAKO,SAAS;;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAEtC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,MAAM;gDAAa;oBACjB,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,wHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,UAAU;oBAElC,QAAQ,SAAS,QAAQ;gBAC3B;;YAEA;YAEA,MAAM,EAAE,MAAM,QAAQ,EAAE,GAAG,wHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,iBAAiB;qCAAC,CAAC,QAAQ;oBAClE,QAAQ,SAAS,QAAQ;gBAC3B;;YAEA;qCAAO;oBACL,SAAS,YAAY,CAAC,WAAW;gBACnC;;QACF;4BAAG,EAAE;IAEL,OAAO;AACT;GAxBgB","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/odile/anime-manga-app/app/anime/%5Bid%5D/ReviewSection.tsx"],"sourcesContent":["'use client';\n\nimport { useParams } from \"next/navigation\";\nimport { useState, useEffect, ReactNode } from \"react\";\nimport { supabase } from '@/lib/supabaseClient'\nimport { useUser } from \"@/lib/useUser\";\n\n\ntype Review = {\n  [x: string]: ReactNode;\n  id: string;\n  user_id: number;\n  content: string;\n  created_at: string;\n  media_id: number;\n  media_type: 'anime' | 'manga';\n}\n\nexport default function ReviewsSection({ mediaId, mediaType }: { mediaId: number, mediaType: 'anime' | 'manga' }) {\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const [content, setContent] = useState(\"\");\n  const user = useUser();\n\n  const [votes, setVotes] = useState<Record<string, number>>({})\n  const [userVotes, setUserVotes] = useState<Record<string, number>>({})\n\n  const [expanded, setExpanded] = useState<Record<string, boolean>>({})\n  const toggleExpanded = (id: string) => {\n    setExpanded(prev => ({ ...prev, [id]: !prev[id] }))\n  }\n\n  useEffect(() => {\n    console.log(\"Fetching reviews for media ID:\", mediaId);\n    const fetchReviews = async () => {\n      const { data, error } = await supabase\n        .from('reviews')\n        .select('*')\n        .eq('media_id', mediaId)\n        .eq('media_type', mediaType)\n        .order('created_at', { ascending: false });\n\n      if (error) {\n        console.error('❌ Error fetching reviews:', error);\n        setReviews([]);\n      } else {\n        setReviews(data as Review[]);\n      }\n    };\n    fetchReviews();\n  }, [mediaId, mediaType]);\n\n  useEffect(() => {\n    const fetchVotes = async () => {\n      const voteQuery = await supabase\n        .from('review_votes')\n        .select('review_id, vote')\n\n      const userVoteQuery = await supabase\n        .from('review_votes')\n        .select('review_id, vote')\n        .eq('user_id', user?.id)\n\n      const allVotes = voteQuery.data || []\n      const voteCount: Record<string, number> = {}\n      allVotes.forEach(v => {\n        voteCount[v.review_id] = (voteCount[v.review_id] || 0) + v.vote\n      })\n      setVotes(voteCount)\n\n      const myVotes: Record<string, number> = {}\n      ;(userVoteQuery.data || []).forEach(v => {\n        myVotes[v.review_id] = v.vote\n      })\n      setUserVotes(myVotes)\n    }\n\n    if (user?.id) fetchVotes()\n  }, [reviews, user?.id])\n\n  const handleVote = async (reviewId: string, value: number) => {\n    if (!user) return\n\n    const existing = userVotes[reviewId]\n    let newValue = value\n\n    if (existing === value) {\n      newValue = 0\n    }\n\n    const { error } = await supabase\n      .from('review_votes')\n      .upsert({\n        user_id: user.id,\n        review_id: reviewId,\n        vote: newValue || null,\n      } as any)\n\n    if (error) {\n      console.error('Vote error:', error)\n      return\n    }\n\n    const updatedVotes = { ...votes }\n    updatedVotes[reviewId] = (updatedVotes[reviewId] || 0) + (newValue - (existing || 0))\n    setVotes(updatedVotes)\n\n    const updatedUserVotes = { ...userVotes }\n    if (newValue === 0) delete updatedUserVotes[reviewId]\n    else updatedUserVotes[reviewId] = newValue\n    setUserVotes(updatedUserVotes)\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!content.trim()) return;\n    if (!user) {\n      alert(\"You need to log in to submit a review.\");\n      return;\n    }\n\n    // Use user.id directly from supabase user object\n    const { data, error } = await supabase\n      .from('reviews')\n      .insert([\n        {\n          media_id: mediaId,\n          media_type: mediaType,\n          user_id: user.id,\n          content,\n        },\n      ])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('❌ Error submitting review:', error);\n      alert('Failed to submit review');\n    } else {\n      setReviews((prev) => [data, ...prev]);\n      setContent('');\n    }\n  };\n\n  // ✅ RETURN MUST BE HERE, OUTSIDE handleSubmit\n  return (\n    <>\n      {reviews.length === 0 && (\n        <p className=\"text-gray-500 italic\">\n          No reviews from users yet — be the first to write one!\n        </p>\n      )}\n\n      {reviews.map((review) => (\n        <div key={review.id}>\n          <strong>User {review.user_id}:</strong>\n          <p className=\"text-sm text-gray-800 whitespace-pre-line\">\n            {expanded[review.id]\n              ? review.content\n              : review.content.length > 300\n              ? review.content.slice(0, 300) + '...'\n              : review.content}\n          </p>\n          {review.content.length > 300 && (\n            <button\n              onClick={() => toggleExpanded(review.id)}\n              className=\"text-xs text-blue-600 underline mt-1\"\n            >\n              {expanded[review.id] ? 'Show less' : 'Read more'}\n            </button>\n          )}\n          <div className=\"flex items-center gap-2 text-sm mt-1\">\n            <button\n              className={`hover:text-green-600 ${\n                userVotes[review.id] === 1 ? 'text-green-600 font-bold' : 'text-gray-400'\n              }`}\n              onClick={() => handleVote(review.id, 1)}\n              type=\"button\"\n            >\n              ▲\n            </button>\n            <span>{votes[review.id] ?? 0}</span>\n            <button\n              className={`hover:text-red-600 ${\n                userVotes[review.id] === -1 ? 'text-red-600 font-bold' : 'text-gray-400'\n              }`}\n              onClick={() => handleVote(review.id, -1)}\n              type=\"button\"\n            >\n              ▼\n            </button>\n          </div>\n        </div>\n      ))}\n\n      {user ? (\n        <form onSubmit={handleSubmit} className=\"mt-6 space-y-3\">\n          <label htmlFor=\"review\" className=\"block font-medium text-gray-700\">\n            Write your review:\n          </label>\n          <textarea\n            id=\"review\"\n            rows={4}\n            className=\"w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Share your thoughts about this title...\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            Submit Review\n          </button>\n        </form>\n      ) : (\n        <p className=\"mt-4 text-gray-700\">\n          Want to share your thoughts?{' '}\n          <a href=\"/login\" className=\"text-blue-600 underline hover:text-blue-800\">\n            Log in to write a review.\n          </a>\n        </p>\n      )}\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}