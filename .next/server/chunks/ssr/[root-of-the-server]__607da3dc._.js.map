{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/odile/anime-manga-app/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nexport const supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n  {\n    auth: {\n      persistSession: true,\n      autoRefreshToken: true,\n      detectSessionInUrl: true,\n    }\n  }\n)"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,sUAGjC;IACE,MAAM;QACJ,gBAAgB;QAChB,kBAAkB;QAClB,oBAAoB;IACtB;AACF","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///Users/odile/anime-manga-app/app/anime/%5Bid%5D/ReviewWrapper.tsx"],"sourcesContent":["'use client';\n\nimport dynamic from 'next/dynamic';\nimport React from 'react';\n\nconst ReviewsSection = dynamic(() => import('./ReviewSection')) as unknown as React.FC<{ animeId: number }>;\n\nexport default function ReviewWrapper({ animeId }: { animeId: number }) {\n  return <ReviewsSection animeId={animeId} />;\n}"],"names":[],"mappings":";;;;AAEA;;AAFA;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAAE;;;;;;;AAEhB,SAAS,cAAc,EAAE,OAAO,EAAuB;IACpE,qBAAO,8OAAC;QAAe,SAAS;;;;;;AAClC","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/odile/anime-manga-app/app/%5Btype%5D/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { supabase } from '@/lib/supabaseClient'\nimport ReviewWrapper from '@/app/anime/[id]/ReviewWrapper'\nimport React from 'react'\nimport toast from 'react-hot-toast'\n\nexport default function MediaDetailPage({\n  params,\n}: {\n  params: { type: 'anime' | 'manga'; id: string }\n}) {\n  const [media, setMedia] = useState<any>(null)\n  const [user, setUser] = useState<any>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const query = `\n          query ($id: Int, $type: MediaType) {\n            Media(id: $id, type: $type) {\n              id\n              type\n              title {\n                romaji\n                english\n                native\n              }\n              coverImage {\n                large\n              }\n              description\n              genres\n              averageScore\n            }\n          }\n        `\n\n        const res = await fetch('https://graphql.anilist.co', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n          body: JSON.stringify({\n            query,\n            variables: { id: Number(params.id), type: params.type?.toUpperCase() },\n          }),\n        })\n\n        const json = await res.json()\n        console.log('AniList response:', json)\n        if (json.errors) {\n          console.error('AniList API error:', json.errors)\n          return\n        }\n        setMedia(json.data.Media)\n      } catch (err) {\n        console.error('Fetch failed:', err)\n      }\n    }\n    const fetchUser = async () => {\n      const { data } = await supabase.auth.getUser()\n      setUser(data.user)\n    }\n\n    fetchData()\n    fetchUser()\n  }, [params.id, params.type])\n\n  const handleLibraryUpdate = async (status: 'interested' | 'watching' | 'completed') => {\n    if (!user || !media) {\n      alert('You must be logged in to update your library.')\n      return\n    }\n\n    const { error, data } = await supabase.from('user_library').upsert({\n      user_id: user.id,\n      media_id: media.id,\n      media_type: params.type,\n      status,\n    })\n    \n    if (error) {\n      console.error('Supabase error:', error.message)\n      toast.error(error.message || 'Failed to save to library')\n    } else {\n      console.log('✅ Successfully added:', data)\n      toast.success(`Added to your library as \"${status}\"`, {\n        duration: 3000,\n        position: 'top-right',\n      })\n    }\n  }\n\n  if (media === null) {\n    return <p className=\"p-4 text-red-500\">Failed to load media. Check the URL or your connection.</p>\n  }\n\n  if (!media) return <p className=\"p-4\">Loading...</p>\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold\">{media.title.romaji}</h1>\n\n      <div className=\"flex gap-4 my-2\">\n        <button\n          className=\"text-xl hover:scale-110 transition\"\n          title=\"Add to Archived / Interested\"\n          onClick={() => handleLibraryUpdate('interested')}\n        >\n          ⭐️\n        </button>\n        <button\n          className=\"text-xl hover:scale-110 transition\"\n          title=\"Mark as On-going\"\n          onClick={() => handleLibraryUpdate('watching')}\n        >\n          ⏳\n        </button>\n        <button\n          className=\"text-xl hover:scale-110 transition\"\n          title=\"Mark as Completed\"\n          onClick={() => handleLibraryUpdate('completed')}\n        >\n          ☑️\n        </button>\n      </div>\n\n      <img src={media.coverImage.large} alt=\"cover\" className=\"w-48 my-4\" />\n      <p dangerouslySetInnerHTML={{ __html: media.description }} />\n      <p>\n        <strong>Genres:</strong> {media.genres.join(', ')}\n      </p>\n      <p>\n        <strong>Score:</strong> {media.averageScore}\n      </p>\n\n      <hr className=\"my-4\" />\n      <ReviewWrapper animeId={media.id} />\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}